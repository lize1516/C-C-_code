//矩阵中某个元素为0，则该行与该列元素全部置0

void setzeros(vector<vector<int>>&matrix)
{
	const int m = matrix.size();
	const int n = matrix[0].size();
	bool row = false;
	bool column = false;

	for (int i = 0; i < m; i++)
	{
		if (matrix[i][0] == 0)
		{
			row = true;
			break;
		}
	}
	for (int j = 0; j < n; j++)
	{
		if (matrix[0][j] == 0)
		{
			column = true;
			break;
		}
	}
	for (int i= 1; i < m; i++)
	{
		for (int j = 1; j < n; j++)
		{
			if (matrix[i][j] == 0)
			{
				matrix[0][j] = 0;
				matrix[i][0] = 0;
			}
		}
	}
	for(int i = 1; i < m; ++i)
	{
		if(matrix[i][0] == 0)
		{
			for(int j = 1; j < n; ++j)
			{
				matrix[i][j] = 0;
			}
		}
	}

	for(int j = 1; j < n; ++j)
	{
		if(matrix[0][j] == 0)
		{
			for(int i = 1; i < m; ++i)
			{
				matrix[i][j] = 0;
			}
		}
	}
	
	if (row)
	{
		for (int i = 0; i < m; i++)
			matrix[i][0] = 0;
	}
	if (column)
	{
		for (int j = 0; j < n; j++)
			matrix[0][j] = 0;
	}
}
int main()
{
	int arr[][5] = { { 0, 1, 2, 3, 4 },
	                 { 5, 6, 7, 0, 8 }, \
	                 {9, 10, 1, 11, 12} };
	vector<int> v1;
	vector<vector<int>> ret;
	for (int i = 0; i < 3; i++)
		ret.push_back(v1);

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 5; j++)
		{
			ret[i].push_back(arr[i][j]);
		}
	}
	setzeros(ret);

	system("pause");
	return 0;
}
