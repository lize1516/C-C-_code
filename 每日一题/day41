1.给定一个有n个正整数的数组A和一个整数sum,求选择数组A中部分数字和为sum的方案数。
当两种选取方案有一个数字的下标不一样,我们就认为是不同的组成方案。
////////////////////////////////////
#include<iostream>
#include<vector>
using namespace std;
 
int main() {
    int n, sum;
    cin>>n>>sum;
    
    vector<long long> a(sum+1);
    vector<int> temp(n);
    for(int i=0; i<n; i++)
        cin>>temp[i];
    
    a[0] = 1;
    for (int i=0; i<n; i++)
        for (int j=sum; j>=temp[i]; j--)
          	a[j] += a[j-temp[i]];
  
    cout<<a[sum]<<endl;
    return 0;
}

///////////////////////////////////////////////////
2.   输入： abcd12345ed125ss123058789
      输出： 123058789,9

#include <iostream>
#include <string>
using namespace std;
int main()
{  
    string str;
    while(cin>>str)
    {
        int i,max=0;
        string temp;
        string out;
        for(i=0;i<str.size();i++)
        {
            if(str[i]>='0'&&str[i]<='9')
            {
                temp+=str[i];
                while(str[i+1]>='0'&&str[i+1]<='9')
                {
                    i++;
                    temp+=str[i];
                }
                if(temp.size()>max)
                {
                    max=temp.size();
                    out=temp;
                }
                else if(temp.size()==max)
                   out+=temp;
            }
            temp.clear();
        }
        cout<<out<<","<<max<<endl;
    }
    return 0;
}

