//大数求和逆序存放在链表中
ListNode *addTwoNumbers1(ListNode *l1, ListNode *l2) {

	int cur = 0;
	int addF = 0;
	ListNode* newHead = new ListNode(-1);
	ListNode* pre = newHead;
	newHead->next = l1;
	while (l1&&l2)
	{
		cur = SloveSum(l1->val, l2->val, &addF);
		
		l1->val = cur;
		pre= l1;
		l1 = l1->next;
		l2 = l2->next;
	}
	if (l1 == NULL&&l2 != NULL)
	{
		pre->next = l2;
		while (l2)
		{
			cur = SloveSum(0, l2->val, &addF);

			l2->val = cur;
			pre = l2;
			l2 = l2->next;
		}
		if (addF == 1)
		{
			ListNode* newNode = new ListNode(1);
			pre->next = newNode;
		}
	}
	else if (l1 != NULL&&l2 == NULL)
	{
		while (l1)
		{
			cur = SloveSum(l1->val, 0, &addF);

			l1->val = cur;
			pre = l1;
			l1 = l1->next;
		}
		if (addF == 1)
		{
			ListNode* newNode = new ListNode(1);
			pre->next = newNode;
		}
	}
	else
	{
		if (addF == 1)
		{
			ListNode* newNode = new ListNode(1);
			pre->next = newNode;
		}
	}

	return newHead->next;
}
