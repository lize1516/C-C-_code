//1.判断序列是否是出栈顺序
#include<stack>
bool IsPopOrder(vector<int> pushV, vector<int> popV) {
	int len = pushV.size();
	stack<int> s1;
	int i = 0;
	int j =0;
	for (i = 0; i < len; i++)
	{
		if (pushV[i] != popV[j])
		{
			s1.push(pushV[i]);
		}
		else if (pushV[i] == popV[j])
		{
			j++;
		}
	}
	while (j < len)
	{
		if (s1.top() != popV[j])
			return false;

		s1.pop();
		j++;
	}
	return true;
}

//2.封装栈，可以获取最小值
#include<stack>
stack<int> s1, minnum;
void push(int value) {
	s1.push(value);
	if (minnum.empty())
		minnum.push(value);
	else
	{
		if (minnum.top() > value)
		{
			minnum.push(value);
		}
		else
			minnum.push(minnum.top());
	}
}
void pop() {
	if (!s1.empty())
	{
		s1.pop();
		minnum.pop();
	}
}
int top() {
	if (!s1.empty())
		return s1.top();
	return 0;
}
int min() {
	if (!minnum.empty())
		return minnum.top();
	return 0;
}

