#include<string>
void num_become_str(string& s1,int num)
{
	int n = 0;
	if (num < 10)
	{
		s1.push_back(num + '0');
		return;
	}
	
	n = num % 10;
	num_become_str(s1, num / 10);
	s1.push_back(n +'0');
}
bool find_str(string min,string s)
{
	int size1 = min.size();
	int i = 0;
	int size2 = s.size();
	int j = 0;
	while (i < size1&&j < size2)
	{
		if (min[i] < s[j])
			return true;
		else if (min[i] == s[j])
		{
			i++;
			j++;
		}
		else
			return false;
	}
	if (i == size1)
		return false;
	else
		return true;

}
string PrintMinNumber(vector<int> numbers) {
	int size = numbers.size();

	vector<string> s1;
	s1.resize(size);
	string ret;
	for (int n = 0; n < size; n++)
	{
		num_become_str(s1[n], numbers[n]);
	}
	int i = 0, j = 0; 
	for (i = 0; i < size-1; i++)
	{
		int k = 0;
		for (j = 1; j < size-i; j++)
		{
			if (find_str(s1[k], s1[j]))
			{
				k = j;
			}
		}
		s1[j-1].swap(s1[k]);
	}
	for (int i = 0; i < size; i++)
	{
		ret = ret + s1[i];
	}
	return ret;
}
int main()
{
	int str[] = { 3,5,1,4,2 };
	int size = sizeof(str) / sizeof(str[0]);
	vector<int> arr;
	for (int i = 0; i < size; i++)
	{
		arr.push_back(str[i]);
	}
	string s2=PrintMinNumber(arr);

	system("pause");
	return 0;
}
