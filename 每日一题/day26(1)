//1.判断一棵二叉树是否是二叉搜索树

bool isValidBST(TreeNode *root) {
        return isBST(root,INT_MIN,INT_MAX);
    }
    bool isBST(TreeNode*root,int min,int max)
    {
        if(root==NULL)
            return true;
        if(root->val<=min||root->val>=max)
            return false;
        return isBST(root->left,min,root->val)&&isBST(root->right,root->val,max);
        
    }
    
//2.two-sum    LeetCode
 
 vector<int> twoSum(vector<int> &numbers, int target) {
        vector<int> ret;
        int size=numbers.size();
        for(int i=0;i<size-1;i++)
        {
            int j=i+1;
            for(;j<size;j++)
            {
                if((numbers[j]+numbers[i])==target)
                {
                    ret.push_back(i+1);
                    ret.push_back(j+1);
                    return ret;
                }
            }
        }
        return ret;
    }
